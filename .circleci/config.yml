version: 2
jobs:
  load_cache:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Run Tests
          command: ./gradlew lint test

  unit_tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: ./gradlew test

  store_tests_results:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Build
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks

  deploy:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - deploy:
          name: Deploy APK.
          command: ./gradlew crashlyticsUploadDistributionRelease

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - load_cache
      - tests:
          requires:
            - load_cache
      - unit_tests:
          requires:
            - load_cache
      - store_tests_results:
          requires:
            - tests
            - unit_tests
      - build:
          requires:
            - store_tests_results
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master